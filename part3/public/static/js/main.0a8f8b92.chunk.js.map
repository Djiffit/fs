{"version":3,"sources":["index.tsx"],"names":["API","axios","create","baseURL","Input","_ref","title","value","change","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","onChange","event","target","InputForm","_ref2","fields","submit","onSubmit","preventDefault","map","field","Object","assign","key","PeopleListing","_ref3","people","remove","_ref4","name","number","_id","onClick","Error","_ref5","type","message","className","toLowerCase","ReactDOM","render","_useState","useState","_useState2","_home_konstaku_School_FS_part2_phonebook_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","filter","changeFilter","_useState3","_useState4","setPeople","_useState5","_useState6","newName","changeNewName","_useState7","_useState8","newPhone","changeNewPhone","_useState9","_useState10","notification","changeNotification","fetchPeople","_ref6","_home_konstaku_School_FS_part2_phonebook_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_home_konstaku_School_FS_part2_phonebook_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","mark","_callee","res","wrap","_context","prev","next","get","sent","data","stop","apply","this","arguments","useEffect","notify","setTimeout","_ref7","_callee2","newUser","user","_context2","some","_ref8","post","console","log","concat","_home_konstaku_School_FS_part2_phonebook_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","window","confirm","_home_konstaku_School_FS_part2_phonebook_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","find","p","put","t0","response","error","_ref9","_callee3","id","_context3","delete","_x","show","_ref10","includes","document","getElementById"],"mappings":"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","file":"static/js/main.0a8f8b92.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport axios from 'axios'\n\nconst API_URL = '/api/persons'\nconst API = axios.create({\n    baseURL: API_URL\n})\n\ninterface Person {\n    name: string\n    number: string\n    _id: string\n}\n\ninterface InputProps {\n    title: string\n    value: string\n    change: (value: string) => void\n}\n\ninterface Notification {\n    type: 'Error' | 'Success'\n    message: string\n}\n\nconst Input = ({title, value, change}: InputProps) => \n    <p>{title} <input value={value} onChange={(event) => change(event.target.value)} /></p>\n\nconst InputForm = ({fields, submit}: {fields: InputProps[], submit: () => void}) => \n    <div>\n        <form onSubmit={event => {\n            event.preventDefault()\n            submit()\n        }}>\n            <h3>add a new</h3>\n            {fields.map(field => <Input key={field.title} {...field} />)}\n            <button>\n                Create\n            </button>\n        </form>\n    </div>\n\nconst PeopleListing = ({people, remove}: {people: Person[], remove: (_id: string) => void}) => \n    <div>\n        <h3>Numbers</h3>\n        {people.map(({name, number, _id}) => <p key={_id}>{name} {number} <button onClick={() => remove(_id)}>delete</button></p>)}\n    </div>\n\nconst Error = ({type, message}: Notification) => {\n    return <p className={type.toLowerCase()}>{message}</p>\n}\n\nconst App = () => {\n    const [filter, changeFilter] = useState('')\n    const [people, setPeople] = useState<Array<Person>>([])\n    const [newName, changeNewName] = useState('')\n    const [newPhone, changeNewPhone] = useState('')\n    const [notification, changeNotification] = useState({message: '', type: 'Success'} as Notification)\n\n    const fetchPeople = async () => {\n        const res = await API.get('/')\n        setPeople(res.data as Person[])\n    }\n\n    useEffect(() => {\n        fetchPeople()\n    }, [])\n\n    const createInputs = (): InputProps[] => {\n        return [\n            {\n                title: 'name :',\n                value: newName,\n                change: changeNewName\n            },\n            {\n                title: 'phone :',\n                value: newPhone,\n                change: changeNewPhone\n            },\n        ]\n    }\n\n    const notify = (type: 'Error' | 'Success', message: string) => {\n        changeNotification({type, message})\n        setTimeout(() => changeNotification({type: 'Success', message: ''}), 5000)\n    }\n\n    const create = async () => {\n\n        try {\n            if (!people.some(({name}) => name === newName)) {\n                const newUser = (await API.post('/', {name: newName, number: newPhone})).data as Person\n                console.log(newUser)\n                setPeople([...people, newUser])\n                changeNewName('')\n                changeNewPhone('')\n                notify('Success', `Created user ${newUser.name}`)\n            } else {\n                if (window.confirm(`${newName} already in the phonebook, do you want to update the number?`)) {\n                    const user = {...people.find(p => p.name === newName), number: newPhone} as Person\n                        await API.put(`${user && user._id}`, user)\n                        setPeople(people.map(p => p._id !== user._id ? p : user))\n                        changeNewName('')\n                        changeNewPhone('')\n                        notify('Success', `Updated user ${user.name}`)\n                }\n            }\n        } catch (e) {\n            console.log(e.response.data.error)\n            notify('Error', (e.response.data.error) || `Failed to update phonebook`)\n        }\n    }\n\n    const remove = async (id: string) => {\n        const user = people.find((p) => p._id === id)\n        if (window.confirm(`Do you want to remove ${user && user.name} for sure?`)) {\n            try {\n                await API.delete(`/${id}`)\n                setPeople(people.filter(p => p._id !== id))\n                notify('Success', `Deleted user ${user && user.name}`)\n            } catch (e) {\n                console.log(e)\n                notify('Error', e.response.data.error || `Failed to delete user ${user && user.name}`)\n            }\n        }\n    }\n\n    const show = filter ?  \n                    people.filter(({name, number}) => name.toLowerCase().includes(filter.toLowerCase()) || number.toLowerCase().includes(filter.toLowerCase()))\n                    : people\n\n    return <div>\n        {notification.message && <Error {...notification} />}\n        <h1>Phonebook</h1>\n        <Input title={'filter shown with'} value={filter} change={(value) => changeFilter(value)} />\n        <InputForm \n            fields={createInputs()}\n            submit={create}\n        />\n        <PeopleListing people={show} remove={remove} />\n    </div>\n\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}